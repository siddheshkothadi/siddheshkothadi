@use "./m3.scss" as m3;

.text {
}

.lightTextColor {
  color: m3.$light-on-primary-container;
}

.darkTextColor {
  color: m3.$dark-on-primary-container;
}

.display1 {
  font-size: m3.$display1;
  font-weight: 700;
  line-height: 3.75rem;
  letter-spacing: -.0083333333em;
}

.display2 {
  font-size: m3.$display2;
}

.display3 {
  font-size: m3.$display3;
}

.headline1 {
  font-size: m3.$headline1;
}

.headline2 {
  font-size: m3.$headline2;
}

.headline3 {
  font-size: m3.$headline3;
}

.headline4 {
  font-size: m3.$headline4;
}

.headline5 {
  font-size: m3.$headline5;
}

.headline6 {
  font-size: m3.$headline6;
}

.subhead1 {
  font-size: m3.$subhead1;
  font-weight: 700;
}

.subhead2 {
  font-size: m3.$subhead2;
}

.button {
  font-size: m3.$button;
  font-weight: 700;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.body1 {
  font-size: m3.$body1;
}

.body2 {
  font-size: m3.$body2;
}

.caption {
  font-size: m3.$caption;
}

.overline {
  font-size: m3.$overline;
}

.labelSmall {
  font-size: m3.$label-small;
}

.displayLarge {
  font-size: m3.$display-large;
}

.displayMedium {
  font-size: m3.$display-medium;
}

.displaySmall {
  font-size: m3.$display-small;
}

.headlineLarge {
  font-size: m3.$headline-large;
}

.headlineMedium {
  font-size: m3.$headline-medium;
}

.headlineSmall {
  font-size: m3.$headline-small;
}

.titleLarge {
  font-size: m3.$title-large;
  font-weight: 700;
}

.titleMedium {
  font-size: m3.$title-medium;
}

.titleSmall {
  font-size: m3.$title-small;
}

.labelLarge {
  font-size: m3.$label-large;
}

.labelMedium {
  font-size: m3.$label-medium;
}

.bodyLarge {
  font-size: m3.$body-large;
}

.bodyMedium {
  font-size: m3.$body-medium;
}

.bodySmall {
  font-size: m3.$body-small;
}

/*
switch(color) {
            case TextColor.ON_PRIMARY:
                return theme === "light" ? styles.onPrimary : styles.onPrimaryDark;
            case TextColor.ON_SECONDARY:
                return theme === "light" ? styles.onSecondary : styles.onSecondaryDark;
            case TextColor.ON_TERTIARY:
                return theme === "light" ? styles.onTertiary : styles.onTertiaryDark;
            case TextColor.ON_PRIMARY_CONTAINER:
                return theme === "light" ? styles.onPrimaryContainer : styles.onPrimaryContainerDark;
            case TextColor.ON_SECONDARY_CONTAINER:
                return theme === "light" ? styles.onSecondaryContainer : styles.onSecondaryContainerDark;
            case TextColor.ON_TERTIARY_CONTAINER:
                return theme === "light" ? styles.onTertiaryContainer : styles.onTertiaryContainerDark;
            case TextColor.ON_ERROR:
                return theme === "light" ? styles.onError : styles.onErrorDark;
            case TextColor.ON_ERROR_CONTAINER:
                return theme === "light" ? styles.onErrorContainer : styles.onErrorContainerDark;
            case TextColor.ON_SURFACE:
                return theme === "light" ? styles.onSurface : styles.onSurfaceDark;
            case TextColor.ON_SURFACE_VARIANT:
                return theme === "light" ? styles.onSurfaceVariant : styles.onSurfaceVariantDark;
            case TextColor.INVERSE_ON_SURFACE:
                return theme === "light" ? styles.inverseOnSurface : styles.inverseOnSurfaceDark;
            case TextColor.ON_BACKGROUND:
                return theme === "light" ? styles.onBackground : styles.onBackgroundDark;
            default:
                return theme === "light" ? styles.lightTextColor : styles.darkTextColor;
        }
*/

.onPrimary {
  color: m3.$light-on-primary;
}

.onPrimaryDark {
  color: m3.$dark-on-primary;
}

.onSecondary {
  color: m3.$light-on-secondary;
}

.onSecondaryDark {
  color: m3.$dark-on-secondary;
}

.onTertiary {
  color: m3.$light-on-tertiary;
}

.onTertiaryDark {
  color: m3.$dark-on-tertiary;
}

.onPrimaryContainer {
  color: m3.$light-on-primary-container;
}

.onPrimaryContainerDark {
  color: m3.$dark-on-primary-container;
}

.onSecondaryContainer {
  color: m3.$light-on-secondary-container;
}

.onSecondaryContainerDark {
  color: m3.$dark-on-secondary-container;
}

.onTertiaryContainer {
  color: m3.$light-on-tertiary-container;
}

.onTertiaryContainerDark {
  color: m3.$dark-on-tertiary-container;
}

.onError {
  color: m3.$light-on-error;
}

.onErrorDark {
  color: m3.$dark-on-error;
}

.onErrorContainer {
  color: m3.$light-on-error-container;
}

.onErrorContainerDark {
  color: m3.$dark-on-error-container;
}

.onSurface {
  color: m3.$light-on-surface;
}

.onSurfaceDark {
  color: m3.$dark-on-surface;
}

.onSurfaceVariant {
  color: m3.$light-on-surface-variant;
}

.onSurfaceVariantDark {
  color: m3.$dark-on-surface-variant;
}

.inverseOnSurface {
  color: m3.$light-inverse-on-surface;
}

.inverseOnSurfaceDark {
  color: m3.$dark-inverse-on-surface;
}

.onBackground {
  color: m3.$light-on-background;
}

.onBackgroundDark {
  color: m3.$dark-on-background;
}

.black {
  color: black;
}

.white {
  color: white;
}